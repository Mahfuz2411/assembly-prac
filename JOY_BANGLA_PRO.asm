ORG 100H
INCLUDE 'EMU8086.INC'


;ARRAY DECLARATION 
LOW DW 1 DUP<?>
HGH DW 1 DUP<?>
CNT DW 1 DUP(?)
MAX DW 1 DUP(?)      

;REMEMBER SOME NOTES:
;SCAN_NUM USE CX REGISTER TO INPUT
;PRINT_NUM_UNS USE AX REGISTER TO PRINT 

XOR CX,CX 

;LOW VALUE INUT
;==============
PRINT 'LOW: $'
CALL SCAN_NUM
PRINTN
MOV LOW,CX 
       
;HIGH VALUE INPUT
;===============
PRINT 'HIGH: $'
CALL SCAN_NUM
PRINTN
MOV HGH,CX 

PRINTN 'I MIGHT BE SLOW, PLEASE WAIT!'
PRINTN 

XOR CX,CX
MOV CX,2       
MOV MAX,0

JMP MAIN_PROCESS

EXT_PROCESS:
    MOV BX,AX
    CMP AX,1
    JE CHECK_MAX
    INC CNT
    
    XOR DX,DX  
    DIV CX
    MUL CX
    
    CMP AX,BX     
    JE EVN
    JNE ODD

;IFF VALUE IS EVEN    
EVN:
    DIV CX
    JMP EXT_PROCESS

;IFF VALUE IS ODD
ODD:
    MOV AX,BX
    MUL CX
    ADD AX,BX
    INC AX     
    JMP EXT_PROCESS
         
;CHECKING THE MAXIMUM     
CHECK_MAX: 
    MOV AX,CNT
    MOV BX,MAX
    
    CALL PRINT_NUM_UNS     ;FOR TESTING
    PRINTN
        
    CMP AX,BX
    JG STORE_VALUE     
    JMP MAIN_PROCESS 
    
;STORING MAXIMUM VALUE
STORE_VALUE:  
    MOV MAX,AX     
    
;MAIN PROCESS START FROM HERE
MAIN_PROCESS: 
    MOV CNT,1     
    MOV AX,LOW     
    INC LOW 
    
    CMP AX,HGH
    JG DONE 
      
    CALL PRINT_NUM_UNS     ;FOR TESTING
    PRINT ' => '
       
    JMP EXT_PROCESS 
    
;SHOW RESULT  
DONE: 
    PRINTN       
    PRINT 'RESULT : $'
    MOV AX,MAX  
    CALL PRINT_NUM_UNS        

PRINTN
PRINTN
PRINT 'THANKS FOR RUN THIS CODE...$'
DEFINE_SCAN_NUM      
DEFINE_PRINT_NUM_UNS 
END